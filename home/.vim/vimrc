"
" Vim configuration
" Author:   Alisue <lambdalisue@hashnote.net>
" URI:      http://hashnote.net/
" Platform: Linux, Mac OS X
"
if has('vim_starting')
  if has('multi_byte')
    set ambiwidth=double
    set encoding=utf-8
    scriptencoding utf-8
  endif
  set history=10000
  set runtimepath& runtimepath+=~/.vim
endif

" Disable unnecessary features {{{
set noswapfile
set nobackup
set nowritebackup
set noerrorbells
set novisualbell t_vb=

" disable unnecessary default plugins
let g:loaded_gzip              = 1
let g:loaded_tar               = 1
let g:loaded_tarPlugin         = 1
let g:loaded_zip               = 1
let g:loaded_zipPlugin         = 1
let g:loaded_rrhelper          = 1
let g:loaded_2html_plugin      = 1
let g:loaded_vimball           = 1
let g:loaded_vimballPlugin     = 1
let g:loaded_getscript         = 1
let g:loaded_getscriptPlugin   = 1
let g:loaded_netrw             = 1
let g:loaded_netrwPlugin       = 1
let g:loaded_netrwSettings     = 1
let g:loaded_netrwFileHandlers = 1
" }}}

" Environmental configure {{{
set shell=/bin/bash
let $MYVIM_HOME   = expand('~/.vim')
let $MYVIM_DATA   = expand('~/Dropbox/Apps/Vim')
let $MYVIM_VIMRC  = resolve(expand('$MYVIM_HOME/vimrc'))
let $MYVIM_GVIMRC = resolve(expand('$MYVIM_HOME/gvimrc'))

" Add several required path to $PATH
call vimrc#prepend_envpath('$PATH', [
      \ '/usr/local/bin',
      \ '/usr/local/texlive/2013/bin/x86_64-linux',
      \ '/usr/local/texlive/2013/bin/x86_64-darwin',
      \ '~/.pyenv/bin',
      \ '~/.plenv/bin',
      \ '~/.rbenv/bin',
      \ '~/.ndenv/bin',
      \ '~/.pyenv/shims',
      \ '~/.plenv/shims',
      \ '~/.rbenv/shims',
      \ '~/.ndenv/shims',
      \ '~/.anyenv/envs/pyenv/bin',
      \ '~/.anyenv/envs/plenv/bin',
      \ '~/.anyenv/envs/rbenv/bin',
      \ '~/.anyenv/envs/ndenv/bin',
      \ '~/.anyenv/envs/pyenv/shims',
      \ '~/.anyenv/envs/plenv/shims',
      \ '~/.anyenv/envs/rbenv/shims',
      \ '~/.anyenv/envs/ndenv/shims',
      \ '~/.cabal/bin',
      \ '$MYVIMRUNTIME/bundle/vim-themis/bin',
      \ '$MYVIMRUNTIME/bundle/vim-vimlint/bin',
      \])
call vimrc#prepend_envpath('$MANPATH', [
      \ '/usr/local/share/man/',
      \])
let $PYENV_ROOT = vimrc#pick_path([
      \ expand('~/.anyenv/envs/pyenv'),
      \ expand('~/.pyenv'),
      \])

set viminfo& viminfo+=n$MYVIM_HOME/.viminfo
set viewdir=$MYVIM_HOME/.view
set undodir=$MYVIM_HOME/.undo
set spellfile=$MYVIM_DATA/system/spellfile.utf-8.add
call vimrc#ensure_path(&viewdir)
call vimrc#ensure_path(&undodir)
call vimrc#ensure_path(fnamemodify(&spellfile, ':p:h'))

if has('gui_running') || has('nvim')
  set timeout timeoutlen=1000 ttimeoutlen=100
else
  set t_Co=256     " use 256 colors
  set ttyfast      " enable fast terminal connection
  set ttyscroll=3  " the maximum number of lines for scrolling.
                         " use small value here to prefer redraw the screen
                         " instead of scrolling
  set notimeout ttimeout ttimeoutlen=100
endif

" }}}

set modeline      " do not use modeline
" K to search the help with the cursor word
set keywordprg=:help
" every wrapped line will continue visually indented
set breakindent
set showbreak=\ +

" Language {{{

" prefer English interface
language message C

" prefer English help
set helplang=en,ja

" set default language for spell check
" cjk - ignore spell check on Asian characters (China, Japan, Korea)
set nospell
set spelllang=en_us,cjk
set fileencodings=ucs-bom,utf-8,euc-jp,iso-2022-jp,cp932,utf-16,utf-16le
set fileformats=unix,dos,mac
" }}}

" Interface {{{
set hidden              " hide the buffer instead of close
set switchbuf=useopen   " use an existing buffer instaed of creating a new one
set autoread            " automatically read the changed contents

set showmatch           " highlight a partner of cursor character
set matchtime=1         " highlight a partner ASAP
set updatetime=1000     " increase speed of CursorHold autocommand
set nostartofline       " let C-D, C-U,... to keep same column
set smartcase           " override the ignorecase if the search pattern contains
                              " upper case characters
set incsearch           " use incremental search
set wrapscan            " wrap scan
set hlsearch            " highlight found terms

set foldenable
set foldmethod=manual
set foldlevelstart=99
set foldnestmax=3       " maximum fold nesting level
set foldcolumn=3        " show fold guide

set number                " show line numbers
set list                  " show invisible characters
set laststatus=2          " always shows statusline
set scrolloff=4           " minimum number of screen lines to keep in scroll
set sidescrolloff=4       " minimum number of screen columns to keep in scroll
set cmdheight=2           " the number of screen lines to use for command line
set showcmd               " show command on statusline
set nolazyredraw          " do not redraw while command execution
set nosplitbelow          " split to top
set splitright            " vsplit to right
set report=0              " report any changes
set display=lastline      " display last line in a window AMAP
set showtabline=2         " display tabline always

" move cursor previous/next line when the cursor is first/last character in the
" line and user move the cursor left/right
set whichwrap=b,s,<,>,~,[,]

" store cursor, folds, slash, unix on view
set viewoptions=cursor,folds,slash,unix

" use rich completion system in command line
set wildmenu
set wildmode=list:longest,full
set wildoptions=tagfile

" do not display cursorline/column (it makes Vim really slow)
set nocursorline
set nocursorcolumn

if has('multi_byte') && $LANG !=# 'C'
  set listchars=tab:»-,trail:-,extends:»,precedes:«,nbsp:%,eol:$
else
  set listchars=tab:>-,trail:-,extends:>,precedes:<,nbsp:%,eol:$
endif

" }}}

" Editing {{{
set smarttab        " insert blanks according to shiftwidth
set expandtab       " use spaces instead of TAB
set tabstop=8       " the number of spaces that a TAB counts for
set softtabstop=4   " the number of spaces that a TAB counts for
set shiftwidth=4    " the number of spaces of an indent
set shiftround      " round indent to multiple of shiftwidth with > and <

set autoindent      " copy indent from current line when starting a new line
set copyindent      " copy the structure of the existing lines indent when
                          " autoindenting a new line
set undofile        " keep undo history on undofile
set virtualedit=all " allow virtual editing in all modes

set wrap            " wrap long text
set textwidth=0     " do not automatically break

" characters which might cause a line break
set breakat& breakat-=-

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Remove a comment leader when joining lines (j)
set formatoptions& formatoptions+=j

" use clipboard register
" - unnamed     : 'selection' in X11; clipboard in Mac OS X and Windows
" - unnamedplus : 'clipboard' in X11, Mac OS X, and Windows
set clipboard^=unnamed,unnamedplus

" completion settings
set complete&
set complete-=i,d
set complete+=.,w,b,u,k,s,t
set completeopt&
set completeopt-=preview
set completeopt+=menu,longest,noselect
set pumheight=20        " height of popup menu
set showfulltag         " show both the tag name and the search pattern
" }}}

call vimrc#source_path('$MYVIM_HOME/rc/mapping.vim')
call vimrc#source_path('$MYVIM_HOME/rc/macro.vim')
call vimrc#source_path('$MYVIM_HOME/rc/plugin.vim')

colorscheme hybrid
filetype indent plugin on
syntax on

call vimrc#source_path('~/.vimrc.local')
set secure
" vim: expandtab softtabstop=2 shiftwidth=2 foldmethod=marker
